version: '3.7'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    hostname: zookeeper
    env_file:
      - ./.env

  clickhouse-node1:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./clickhouse/node1:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node2:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./clickhouse/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node3:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    volumes:
      - ./clickhouse/node3:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node4:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    volumes:
      - ./clickhouse/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper

  broker:
    image: confluentinc/cp-server:6.2.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
      - "29092:29092"
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD", "nc", "-vz", "broker", "29092"]


  schema-registry:
    image: confluentinc/cp-schema-registry:6.2.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    env_file:
      - ./.env

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.2.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker
      - schema-registry
    ports:
      - "9021:9021"
    env_file:
      - ./.env

  kafka-etl:
    build:
      context: ./kafka-etl
      dockerfile: ../docker/development/kafka-etl/Dockerfile
    volumes:
      - ./kafka-etl:/usr/src/app/
    env_file:
      - ./.env
    depends_on:
      - broker
      - schema-registry
      - clickhouse-node1
      - clickhouse-node2
      - clickhouse-node3
      - clickhouse-node4

  kafka-loader:
    build:
      context: .
      dockerfile: Dockerfile-loader-kafka
    volumes:
      - ./loader_data_to_kafka:/loader_data_to_kafka
    env_file:
      - ./.env
    ports:
      - 9999:9999
    depends_on:
      - broker
      - schema-registry

  auth:
    build:
      context: .
      dockerfile: Dockerfile-auth
    volumes:
      - ./auth:/auth
    env_file:
      - ./.env
    ports:
      - 8001:8001
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:13-alpine
    env_file:
      ./.env
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  redis:
    image: redis
    volumes:
      - redis_data:/data


volumes:
  pg_data:
  redis_data: